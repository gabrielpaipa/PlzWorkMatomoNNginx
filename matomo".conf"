THIS IS A SNIPET OF THE FIRST LINES. I think all the relevant information is here: 
• what I'm trying to make the subdomain (matomo.cafebuenvivir.com)
• the location of the root file
• the location of the .cer and .key files (which I literally just copied and pasted from the cafebuenvivir.com.conf file... I hope I'm doing this well)
  • The cafebuenvivir.com file was created, I think, by Ghost. Ghost, when installing it, asks if you'd like to configure Nginx. I always say yes. How could I not. I wouldn't have a clue of what to do.
  • In case it matters, after installing Ghost and setting up SSL, there are two .conf files (three if you add the matomo.conf file).
    • I'm linking the other two files in this Github folder, in case you want to see if that's setting up barriers to my entry into the Matomo world.
• the root of the matomo files, which are indeed at /var/www/
With this setup, and creating a symlink over at my "sites-enabled", I'm able to pass the "-t" test. 
However, after restarting Nginx and heading over to matomo.cafebuenvivir.com, I don't see absolutely anything.
I don't get a 404 like I used to when I tried to have cafebuenvivir.com/matomo as matomo's url.
  In fact I'd like to know how to do either cafebuenvivir.com/matomo or matomo.cafebuenvivir.com.
    But when I try /matomo, I am told by the "-t" test that there are "suspicious" symbols.
      The online threads I checked out said this was because of typing http:// or other stuff... but none of that is what I'm writing down.
    BUT! All of this is completely minor. I don't care of I use either subdomain. I just want Matomo working. That's the priority.
For now, I'd like to get the Matomo install page and not just silence.

server {
    listen [::]:80; # remove this if you don't want Matomo to be reachable from IPv6
    listen 80;
    server_name matomo.cafebuenvivir.com;
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
    listen [::]:443 ssl http2; # remove this if you don't want Matomo to be reachable from IPv6
    listen 443 ssl http2;
    server_name matomo.cafebuenvivir.com; # list all domains Matomo should be reachable from
    access_log /var/log/nginx/matomo.access.log;
    error_log /var/log/nginx/matomo.error.log;

    ## uncomment if you want to enable HSTS with 6 months cache
    ## ATTENTION: Be sure you know the implications of this change (you won't be able to disable HTTPS anymore)
    #add_header Strict-Transport-Security max-age=15768000 always;

    ## replace with your SSL certificate
    ssl_certificate /etc/letsencrypt/cafebuenvivir.com/fullchain.cer;
    ssl_certificate_key /etc/letsencrypt/cafebuenvivir.com/cafebuenvivir.com.key;

    include /etc/nginx/snippets/ssl-params.conf;

#    include ssl.conf; # if you want to support older browsers, please read through this file

    add_header Referrer-Policy origin always; # make sure outgoing links don't show the URL to the Matomo instance
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    root /var/www/matomo/; # replace with path to your matomo instance

    index index.php;

    ## only allow accessing the following php files
    location ~ ^/(index|matomo|piwik|js/index|plugins/HeatmapSessionRecording/configs)\.php {
        include snippets/fastcgi-php.conf; # if your Nginx setup doesn't come with a default fastcgi-php config, you can fetch it from https://github.com/nginx/nginx/blob/master/conf/fastcgi.conf
#        try_files $fastcgi_script_name =404; # protects against CVE-2019-11043. If this line is already included in your snippets/fastcgi-php.conf you can comment it here.
        fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/
        fastcgi_pass unix:/var/run/php/php7.2-fpm.sock; #replace with the path to your PHP socket file
        #fastcgi_pass 127.0.0.1:9000; # uncomment if you are using PHP via TCP sockets (e.g. Docker container)
    }
